"use strict";var ApplicationConfiguration=function(){var applicationModuleName="merciless",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","calHeatmap","nvd3"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("activities"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("users"),angular.module("activities").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Activities","activities","dropdown","/activities(/create)?"),Menus.addSubMenuItem("topbar","activities","List Activities","activities")}]),angular.module("activities").config(["$stateProvider",function($stateProvider){$stateProvider.state("listActivities",{url:"/activities",templateUrl:"modules/activities/views/list-activities.client.view.html"}).state("viewActivity",{url:"/activities/:activityId",templateUrl:"modules/activities/views/list-activity-entries.client.view.html"})}]);var activityApp=angular.module("activities");activityApp.controller("ActivitiesController",["$scope","$stateParams","Authentication","Activities","$modal","$log",function($scope,$stateParams,Authentication,Activities,$modal,$log){this.authentication=Authentication,this.activities=Activities.query(),this.modalCreate=function(size){var modalInstance=$modal.open({templateUrl:"modules/activities/views/create-activity.client.view.html",controller:["$scope","$modalInstance",function($scope,$modalInstance){$scope.ok=function(){$modalInstance.close()},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}],size:size});modalInstance.result.then(function(){},function(){$log.info("Modal dismissed at: "+new Date)})},this.modalUpdate=function(size,selectedActivity){var modalInstance=$modal.open({templateUrl:"modules/activities/views/edit-activity.client.view.html",controller:["$scope","$modalInstance","activity",function($scope,$modalInstance,activity){$scope.activity=activity,$scope.ok=function(){$modalInstance.close($scope.activity)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}],size:size,resolve:{activity:function(){return selectedActivity}}});modalInstance.result.then(function(selectedItem){$scope.selected=selectedItem},function(){$log.info("Modal dismissed at: "+new Date)})},this.modalPush=function(size,selectedActivity){var modalInstance=$modal.open({templateUrl:"modules/activities/views/create-activity-entry.client.view.html",controller:["$scope","$modalInstance","activity",function($scope,$modalInstance,activity){$scope.activity=activity,$scope.ok=function(){$modalInstance.close($scope.activity)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}],size:size,resolve:{activity:function(){return selectedActivity}}});modalInstance.result.then(function(selectedItem){$scope.selected=selectedItem},function(){$log.info("Modal dismissed at: "+new Date)})},this.modalPushUpdate=function(size,selectedEntry,selectedActivity){var modalInstance=$modal.open({templateUrl:"modules/activities/views/edit-activity-entry.client.view.html",controller:["$scope","$modalInstance","entry","activity",function($scope,$modalInstance,entry,activity){$scope.entry=entry,$scope.activity=activity,$scope.ok=function(){$modalInstance.close($scope.entry),$modalInstance.close($scope.activity)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}],size:size,resolve:{entry:function(){return selectedEntry},activity:function(){return selectedActivity}}});modalInstance.result.then(function(selectedItem){$scope.selected=selectedItem},function(){$log.info("Modal dismissed at: "+new Date)})};var heatMapMonthStartSmDevice=new Date;heatMapMonthStartSmDevice.setMonth(heatMapMonthStartSmDevice.getMonth()-4),$scope.heatMapMonthStartSmDevice=heatMapMonthStartSmDevice;var heatMapMonthStartXsDevice=new Date;heatMapMonthStartXsDevice.setMonth(heatMapMonthStartXsDevice.getMonth()-2),$scope.heatMapMonthStartXsDevice=heatMapMonthStartXsDevice,$scope.heatMapDataObject={},$scope.options={chart:{type:"discreteBarChart",height:450,margin:{top:20,right:20,bottom:60,left:55},x:function(d){return d.label},y:function(d){return d.value},showValues:!1,showXAxis:!1,transitionDuration:0,xAxis:{axisLabel:"entries",axisLabelDistance:500},yAxis:{axisLabel:"hours",axisLabelDistance:40},rotateLabels:90}},$scope.data=[{key:"Cumulative Return",values:[]}],$scope.findOne=function(){$scope.activity=Activities.get({activityId:$stateParams.activityId}),$scope.activity.$promise.then(function(data){for(var j in data.entries){var timestamp=Date.parse(data.entries[j].entryDatePicker)/1e3;$scope.heatMapDataObject[timestamp]=1,$scope.data[0].values.push({label:data.entries[j].entryDatePicker.split("T")[0],value:data.entries[j].entryDuration/60/60})}})}}]),angular.module("activities").controller("ActivitiesCreateController",["$scope","Activities","Notify",function($scope,Activities,Notify){var colors=new Array("#81C784","#FFFFFF","#64B5F6","#FFAB91","#A7FFEB","#CFD8DC","#FFB74D","#004159","#65A8C4","#AACEE2","#9A93EC","#00C590","#00ADCE");this.create=function(){var activity=new Activities({name:this.name,description:this.description,color:colors[Math.floor(Math.random()*colors.length)]});activity.$save(function(response){Notify.sendMsg("NewActivity",{id:response._id})},function(errorResponse){$scope.error=errorResponse.data.message})}}]),angular.module("activities").controller("ActivitiesPushController",["$scope","Activities","Notify",function($scope){$scope.open=function($event){$event.preventDefault(),$event.stopPropagation(),$scope.format="yyyy-MM-dd",$scope.opened=!0},$scope.Date=function(){return(new Date).toISOString().slice(0,10)},$scope.dateOptions={startingDay:1};var tomorrow=new Date;tomorrow.setDate(tomorrow.getDate()+1);var afterTomorrow=new Date;afterTomorrow.setDate(tomorrow.getDate()+2),$scope.events=[{date:tomorrow,status:"full"},{date:afterTomorrow,status:"partially"}],this.push=function(pushActivity){var activity=pushActivity;activity.entries.push({entryText:this.entryText,entryDatePicker:this.entryDatePicker,entryDuration:60*this.entryHours*60+60*this.entryMinutes+this.entrySeconds,entryDescription:this.entryDescription}),activity.$update(function(){},function(errorResponse){$scope.error=errorResponse.data.message})}}]),angular.module("activities").controller("ActivitiesPushUpdateController",["$scope","Activities","Notify",function($scope){$scope.Math=window.Math,this.update=function(pullEntry,pullActivity){var entry=pullEntry,activity=pullActivity;activity.entries=activity.entries.filter(function(el){return el._id!==entry._id}),activity.entries.push({entryText:entry.entryText,entryDatePicker:entry.entryDatePicker,entryDuration:60*entry.entryHours*60+60*entry.entryMinutes+entry.entrySeconds,entryDescription:entry.entryDescription}),activity.$update(function(){},function(errorResponse){$scope.error=errorResponse.data.message})},this.pull=function(pullEntry,pullActivity){var entry=pullEntry,activity=pullActivity;activity.entries=activity.entries.filter(function(el){return el._id!==entry._id}),activity.$update(function(){},function(errorResponse){$scope.error=errorResponse.data.message})}}]),angular.module("activities").controller("ActivitiesUpdateController",["$scope","Activities","Notify",function($scope,Activities,Notify){this.update=function(updatedActivity){var activity=updatedActivity;activity.$update(function(){},function(errorResponse){$scope.error=errorResponse.data.message})},this.remove=function(deleteActivity){var activity=deleteActivity;if(activity){activity.$remove(function(response){Notify.sendMsg("NewActivity",{id:response._id})});for(var i in this.activities)this.activities[i]===activity&&this.activities.splice(i,1)}else this.activity.$remove(function(){})}}]),angular.module("activities").directive("activityList",["Activities","Notify",function(Activities,Notify){return{restrict:"E",transclude:!0,templateUrl:"modules/activities/views/activity-list-template.html",link:function(scope){Notify.getMsg("NewActivity",function(){scope.activitiesCtrl.activities=Activities.query()})}}}]),angular.module("activities").filter("millSecondsToTimeString",[function(){return function(millseconds){var initseconds=Math.floor(millseconds/1e3),days=Math.floor(initseconds/86400),hours=Math.floor(initseconds%86400/3600),minutes=Math.floor(initseconds%86400%3600/60),seconds=Math.floor(initseconds%86400%3600%60),timeString="";return days>0&&(timeString+=days>1?days+" days ":days+" day "),hours>0&&(timeString+=hours>1?hours+" hours ":hours+" hour "),minutes>=0&&(timeString+=minutes>1?minutes+" minutes ":minutes+" minute "),seconds>=0&&(timeString+=seconds>1?seconds+" seconds ":seconds+" second "),timeString}}]),angular.module("activities").factory("Activities",["$resource",function($resource){return $resource("activities/:activityId",{activityId:"@_id"},{update:{method:"PUT"}})}]).factory("Notify",["$rootScope",function($rootScope){var notify={};return notify.sendMsg=function(msg,data){data=data||{},$rootScope.$emit(msg,data),console.log("message sent!")},notify.getMsg=function(msg,func,scope){var unbind=$rootScope.$on(msg,func);scope&&scope.$on("destroy",unbind)},notify}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication,$scope.myInterval=5e3;var slides=$scope.slides=[];slides.push({image:"./modules/core/img/brand/carousel_activities.png",text:"create activities"}),slides.push({image:"./modules/core/img/brand/carousel_entries.png",text:"keep track"}),slides.push({image:"./modules/core/img/brand/carousel_heatmap.png",text:"check status"}),slides.push({image:"./modules/core/img/brand/carousel_barchart.png",text:"show duration"})}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/activities")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);